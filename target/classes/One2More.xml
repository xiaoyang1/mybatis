<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="One2MoreMapper">
        <!--
             根据classid查询对应的班级信息，包括学生，老师
        -->
        <!-- 方式一：嵌套结果，使用嵌套结果映射来处理重复的联合结果的子集
            select * from class c,teacher t,student s where c.teacher_id=t.t_id and c.c_id=s.class_id and c.c_id =2
          -->
        <select id="getClass" parameterType="int" resultMap="getClassMap">
            select * from class c,student s,teacher t where  c.teacher_id=t.t_id and c.c_id=s.class_id and c.c_id =2
        </select>
        <resultMap id="getClassMap" type="Classes">
            <id property="id" column="c_id"/>
            <result property="name" column="c_name"/>
            <!--把学生的id和名字封装成一个list集合,,,,,由于前面设置过包，所以直接Student是可以的-->
            <!--加入老师的信息-->
            <association property="teacher" javaType="Teacher">
                <id property="id" column="t_id"/>
                <result property="name" column="t_name"/>
            </association>
            <collection property="list" ofType="Student">
                <id property="id" column="s_id"/>
                <result property="name" column="s_name"/>
                <!--仅仅上面的写法是不够的，如果不加oftype，这个参数说明要封装成的元素对象类型-->
            </collection>
        </resultMap>

        <!--方式二，嵌套查询，通过执行另外的sql映射语句来返回预期的复杂类型
          select * from class where c_id = 2
           select * from teacher where t_id = 2  2是查询得到的teacherid
           select * from student where class_id = 1 // 1是第一个查询得到的c_id 字段的值
        -->
    <select id="getClass2" parameterType="int" resultMap="getClass2Map">
        select * from class where c_id = #{id}
    </select>
    <select id="getTeacher" parameterType="int" resultType="Teacher">
        select t_id id,t_name name from teacher where t_id = #{id}
    </select>
    <select id="getStudent" resultType="Student">
        <!--这里返回的是一个集合-->
        select s_id id,s_name name from student where class_id = #{id}
    </select>
    <resultMap id="getClass2Map" type="Classes">
        <id property="id" column="c_id"/>
        <result property="name" column="c_name"/>
        <!--把学生的id和名字封装成一个list集合,,,,,由于前面设置过包，所以直接Student是可以的-->
        <!--加入老师的信息-->
        <association property="teacher" column="teacher_id" select="getTeacher">
            <id property="id" column="t_id"/>
            <result property="name" column="t_name"/>
        </association>
        <collection property="list" column="c_id" select="getStudent" >
        </collection>
    </resultMap>
</mapper>